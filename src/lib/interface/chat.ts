import { Userstate, CommonUserstate } from "tmi.js";
import { FilterInterface, FilterType } from "./filter";
import { Version } from "./twitchAPI";

export interface MessageInterface {
    id?: string, // Generated by nanoid.
    type: 'message' | 'userNotice' | 'announcement' | 'system',
    message: string,
    channel?: string,
    userstate?: Userstate | CommonUserstate,
    self?: boolean,
    removed?: boolean,
    selected?: boolean,
    replay?: boolean,
    filter?: FilterInterface['category'],
    soc?: boolean
}
export interface ChatInfoContextInterface {
    globalBadges: Map<string, Version>,
    channelBadges: Map<string, Version>,
    cheerMotes: Map<string, any>,
    emoteSets: Map<string, any>
}
export interface ChatInfo {
    badges: string[];
    textContents: string[];
    loginName: string;
    nickName: string;
}
export interface BorderColors {
    [index : string] : string,
    PRIMARY: string,
    BLUE: string,
    GREEN: string,
    ORANGE: string,
    PURPLE: string,
}
export interface BadgeInterface {
    id: string;
    badgeImage: BadgeUrls;
    channel: string;
    note: string;
    badgeName: string;
    filterType: FilterType;
}
export interface BadgeUrls {
    badge_img_url_1x: string;
    badge_img_url_2x: string;
    badge_img_url_4x: string;
}